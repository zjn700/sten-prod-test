/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  MatchResults,
} from '@stencil/router';


export namespace Components {

  interface AppExercises {
    'dimBackground': boolean;
  }
  interface AppExercisesAttributes extends StencilHTMLAttributes {
    'dimBackground'?: boolean;
  }

  interface MultipleChoice {
    'chef': string;
    'dimBackground': boolean;
    'questions': any[];
    'vocabulary': any;
  }
  interface MultipleChoiceAttributes extends StencilHTMLAttributes {
    'chef'?: string;
    'dimBackground'?: boolean;
    'questions'?: any[];
    'vocabulary'?: any;
  }

  interface AppGrammar {}
  interface AppGrammarAttributes extends StencilHTMLAttributes {}

  interface AppHomeMenu {}
  interface AppHomeMenuAttributes extends StencilHTMLAttributes {}

  interface AppHomePage {}
  interface AppHomePageAttributes extends StencilHTMLAttributes {}

  interface AppHome {
    'exercisesId': string;
    'grammarIcon': string;
    'grammarId': string;
    'moreIcon': string;
    'phrasesIcon': string;
    'phrasesId': string;
    'stepsIcon': string;
    'vocabularyId': string;
    'wordsIcon': string;
  }
  interface AppHomeAttributes extends StencilHTMLAttributes {
    'exercisesId'?: string;
    'grammarIcon'?: string;
    'grammarId'?: string;
    'moreIcon'?: string;
    'phrasesIcon'?: string;
    'phrasesId'?: string;
    'stepsIcon'?: string;
    'vocabularyId'?: string;
    'wordsIcon'?: string;
  }

  interface AppPhrases {
    'exercisesId': string;
    'grammarId': string;
    'phrasesId': string;
    'vocabularyId': string;
  }
  interface AppPhrasesAttributes extends StencilHTMLAttributes {
    'exercisesId'?: string;
    'grammarId'?: string;
    'onFabMenuItemSelected'?: (event: CustomEvent) => void;
    'phrasesId'?: string;
    'vocabularyId'?: string;
  }

  interface AppProfile {
    'match': MatchResults;
  }
  interface AppProfileAttributes extends StencilHTMLAttributes {
    'match'?: MatchResults;
  }

  interface AppRoot {
    'homeIcon': string;
    'profileIcon': string;
  }
  interface AppRootAttributes extends StencilHTMLAttributes {
    'homeIcon'?: string;
    'profileIcon'?: string;
  }

  interface AppVocabularyCard {
    'cancelIcon': string;
    'chatIcon': string;
    'commentIcon': string;
    'currentAudio': HTMLAudioElement;
    'dimBackground': boolean;
    'hideMenuBars': boolean;
    'index': any;
    'item': any;
    'moreIcon': string;
    'noteIcon': string;
    'playIcon': string;
    'searchIcon': string;
    'shareIcon': string;
  }
  interface AppVocabularyCardAttributes extends StencilHTMLAttributes {
    'cancelIcon'?: string;
    'chatIcon'?: string;
    'commentIcon'?: string;
    'currentAudio'?: HTMLAudioElement;
    'dimBackground'?: boolean;
    'hideMenuBars'?: boolean;
    'index'?: any;
    'item'?: any;
    'moreIcon'?: string;
    'noteIcon'?: string;
    'playIcon'?: string;
    'searchIcon'?: string;
    'shareIcon'?: string;
  }

  interface AppVocabulary {
    'cancelIcon': string;
    'dimBackground': boolean;
    'exercisesId': string;
    'hideMenuBars': boolean;
    'item': any;
    'moreIcon': string;
    'nextLesson': string;
    'prevLesson': string;
    'vocabulary': any;
    'vocabularyId': string;
  }
  interface AppVocabularyAttributes extends StencilHTMLAttributes {
    'cancelIcon'?: string;
    'dimBackground'?: boolean;
    'exercisesId'?: string;
    'hideMenuBars'?: boolean;
    'item'?: any;
    'moreIcon'?: string;
    'nextLesson'?: string;
    'prevLesson'?: string;
    'vocabulary'?: any;
    'vocabularyId'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'AppExercises': Components.AppExercises;
    'MultipleChoice': Components.MultipleChoice;
    'AppGrammar': Components.AppGrammar;
    'AppHomeMenu': Components.AppHomeMenu;
    'AppHomePage': Components.AppHomePage;
    'AppHome': Components.AppHome;
    'AppPhrases': Components.AppPhrases;
    'AppProfile': Components.AppProfile;
    'AppRoot': Components.AppRoot;
    'AppVocabularyCard': Components.AppVocabularyCard;
    'AppVocabulary': Components.AppVocabulary;
  }

  interface StencilIntrinsicElements {
    'app-exercises': Components.AppExercisesAttributes;
    'multiple-choice': Components.MultipleChoiceAttributes;
    'app-grammar': Components.AppGrammarAttributes;
    'app-home-menu': Components.AppHomeMenuAttributes;
    'app-home-page': Components.AppHomePageAttributes;
    'app-home': Components.AppHomeAttributes;
    'app-phrases': Components.AppPhrasesAttributes;
    'app-profile': Components.AppProfileAttributes;
    'app-root': Components.AppRootAttributes;
    'app-vocabulary-card': Components.AppVocabularyCardAttributes;
    'app-vocabulary': Components.AppVocabularyAttributes;
  }


  interface HTMLAppExercisesElement extends Components.AppExercises, HTMLStencilElement {}
  var HTMLAppExercisesElement: {
    prototype: HTMLAppExercisesElement;
    new (): HTMLAppExercisesElement;
  };

  interface HTMLMultipleChoiceElement extends Components.MultipleChoice, HTMLStencilElement {}
  var HTMLMultipleChoiceElement: {
    prototype: HTMLMultipleChoiceElement;
    new (): HTMLMultipleChoiceElement;
  };

  interface HTMLAppGrammarElement extends Components.AppGrammar, HTMLStencilElement {}
  var HTMLAppGrammarElement: {
    prototype: HTMLAppGrammarElement;
    new (): HTMLAppGrammarElement;
  };

  interface HTMLAppHomeMenuElement extends Components.AppHomeMenu, HTMLStencilElement {}
  var HTMLAppHomeMenuElement: {
    prototype: HTMLAppHomeMenuElement;
    new (): HTMLAppHomeMenuElement;
  };

  interface HTMLAppHomePageElement extends Components.AppHomePage, HTMLStencilElement {}
  var HTMLAppHomePageElement: {
    prototype: HTMLAppHomePageElement;
    new (): HTMLAppHomePageElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppPhrasesElement extends Components.AppPhrases, HTMLStencilElement {}
  var HTMLAppPhrasesElement: {
    prototype: HTMLAppPhrasesElement;
    new (): HTMLAppPhrasesElement;
  };

  interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {}
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppVocabularyCardElement extends Components.AppVocabularyCard, HTMLStencilElement {}
  var HTMLAppVocabularyCardElement: {
    prototype: HTMLAppVocabularyCardElement;
    new (): HTMLAppVocabularyCardElement;
  };

  interface HTMLAppVocabularyElement extends Components.AppVocabulary, HTMLStencilElement {}
  var HTMLAppVocabularyElement: {
    prototype: HTMLAppVocabularyElement;
    new (): HTMLAppVocabularyElement;
  };

  interface HTMLElementTagNameMap {
    'app-exercises': HTMLAppExercisesElement
    'multiple-choice': HTMLMultipleChoiceElement
    'app-grammar': HTMLAppGrammarElement
    'app-home-menu': HTMLAppHomeMenuElement
    'app-home-page': HTMLAppHomePageElement
    'app-home': HTMLAppHomeElement
    'app-phrases': HTMLAppPhrasesElement
    'app-profile': HTMLAppProfileElement
    'app-root': HTMLAppRootElement
    'app-vocabulary-card': HTMLAppVocabularyCardElement
    'app-vocabulary': HTMLAppVocabularyElement
  }

  interface ElementTagNameMap {
    'app-exercises': HTMLAppExercisesElement;
    'multiple-choice': HTMLMultipleChoiceElement;
    'app-grammar': HTMLAppGrammarElement;
    'app-home-menu': HTMLAppHomeMenuElement;
    'app-home-page': HTMLAppHomePageElement;
    'app-home': HTMLAppHomeElement;
    'app-phrases': HTMLAppPhrasesElement;
    'app-profile': HTMLAppProfileElement;
    'app-root': HTMLAppRootElement;
    'app-vocabulary-card': HTMLAppVocabularyCardElement;
    'app-vocabulary': HTMLAppVocabularyElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
